import generateEmailTemplate from "{{templatePath}}";
import i18next from "i18next";

i18next.init({
  lng: "en", // if you're using a language detector, do not define the lng option
  debug: true,
  resources: {
    en: {
      translation: {
        "My name is <b>{{firstName}}</b>.": "hello <b>{{firstName}}</b>",
      },
    },
  },
});

function variable(name){
  return `{{${name}}}`;
}
global.variable = variable;

function trans(...params){
  return i18next.t(...params);
}
global.trans = trans;

function addResourceBundle(...params){
  return i18next.addResourceBundle(...params);
}
global.addResourceBundle = addResourceBundle;

// converts string to html
function html(input){
  // todo: check if input is only string or html tags no JSX components
  // todo: check if html tag is not a script tag
  const anyJsxComponent = /<[A-Z]+.*>.*<\/[A-Z]+>/;
  if (anyJsxComponent.test(input)) {
    throw new Error("JSX components are not allowed in html function.\n" +
      "input was: " + input + "\n");
  }
  return new global.jsx.JsxObject({ __html: input });
}
global.html = html;

function main() {
  if (typeof generateEmailTemplate !== "function") {
    throw new Error("The email template doesn't export a function");
  }
  global.jsx.output = generateEmailTemplate();
}

main();
